{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\workspace\\\\Modul4-React-Todo List\\\\src\\\\App.js\";\nimport Todos from \"./components/Todos\";\nimport AddTodo from \"./components/AddTodo\";\nimport Header from \"./components/layout/Header\";\nimport React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { v4 as uuid } from \"uuid\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport About from \"./components/pages/about\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.markComplete = id => {\n      // Toggle \"completed\" property for todo.\n      const newTodos = this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.deleteTodo = id => {\n      // Filter out the todo that is deleted.\n      axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res => {\n        const newTodos = this.state.todos.filter(todo => todo.id !== id);\n        this.setState({\n          todos: newTodos\n        });\n      });\n    };\n\n    this.AddTodo = title => {\n      axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\n        title,\n        completed: false\n      }).then(res => {\n        res.data.id = uuid();\n        this.setState({\n          todos: [...this.state.todos, res.data]\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10 \").then(res => this.setState({\n      todos: res.data\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: props => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n                AddTodo: this.AddTodo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Todos, {\n                todos: this.state.todos,\n                markComplete: this.markComplete,\n                deleteTodo: this.deleteTodo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            component: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/workspace/Modul4-React-Todo List/src/App.js"],"names":["Todos","AddTodo","Header","React","axios","v4","uuid","BrowserRouter","Router","Route","About","App","Component","state","todos","markComplete","id","newTodos","map","todo","completed","setState","deleteTodo","delete","then","res","filter","title","post","data","componentDidMount","get","render","props"],"mappings":"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","sourcesContent":["import Todos from \"./components/Todos\";\r\nimport AddTodo from \"./components/AddTodo\";\r\nimport Header from \"./components/layout/Header\";\r\nimport React from \"react\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport About from \"./components/pages/about\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    todos: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10 \")\r\n      .then((res) => this.setState({ todos: res.data }));\r\n  }\r\n\r\n  markComplete = (id) => {\r\n    // Toggle \"completed\" property for todo.\r\n    const newTodos = this.state.todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.completed = !todo.completed;\r\n      }\r\n      return todo;\r\n    });\r\n    this.setState({ todos: newTodos });\r\n  };\r\n\r\n  // Delete Todo.\r\n  deleteTodo = (id) => {\r\n    // Filter out the todo that is deleted.\r\n    axios\r\n      .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n      .then((res) => {\r\n        const newTodos = this.state.todos.filter((todo) => todo.id !== id);\r\n        this.setState({ todos: newTodos });\r\n      });\r\n  };\r\n\r\n  // Add todo.\r\n  AddTodo = (title) => {\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/todos\", {\r\n        title,\r\n        completed: false,\r\n      })\r\n      .then((res) => {\r\n        res.data.id = uuid();\r\n\r\n        this.setState({ todos: [...this.state.todos, res.data] });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <div className=\"container\">\r\n            <Header />\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <React.Fragment>\r\n                  <AddTodo AddTodo={this.AddTodo} />\r\n                  <Todos\r\n                    todos={this.state.todos}\r\n                    markComplete={this.markComplete}\r\n                    deleteTodo={this.deleteTodo}\r\n                  />\r\n                </React.Fragment>\r\n              )}\r\n            />\r\n            <Route path=\"/about\" component={About} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}